{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/siaw-dev/Documents/next/learning-projects/next-auth/components/auth/auth-form.js\";\nimport { useState, useRef } from \"react\";\nimport { signIn } from \"next-auth/react\";\nimport classes from \"./auth-form.module.css\";\n\nasync function createUser(email, password) {\n  const response = await fetch(\"api/auth/signup\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      email,\n      password\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Something went wrong!\");\n  }\n\n  return data;\n}\n\nfunction AuthForm() {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const {\n    0: isLogin,\n    1: setIsLogin\n  } = useState(true);\n\n  function switchAuthModeHandler() {\n    setIsLogin(prevState => !prevState);\n  }\n\n  async function submitHandler(e) {\n    e.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    if (isLogin) {\n      try {\n        const result = await signIn(\"credentials\", {\n          redirect: false,\n          email: enteredEmail,\n          password: enteredPassword\n        });\n        console.log(\"asdds\" + result);\n      } catch (error) {\n        console.log(\"signIn: \" + error);\n      }\n    } else {\n      try {\n        const result = await createUser(enteredEmail, enteredPassword);\n        console.log(result);\n      } catch (error) {\n        console.log(\"createUser: \" + error);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\nexport default AuthForm;","map":{"version":3,"sources":["/home/siaw-dev/Documents/next/learning-projects/next-auth/components/auth/auth-form.js"],"names":["useState","useRef","signIn","classes","createUser","email","password","response","fetch","method","body","JSON","stringify","headers","data","json","ok","Error","message","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","switchAuthModeHandler","prevState","submitHandler","e","preventDefault","enteredEmail","current","value","enteredPassword","result","redirect","console","log","error","auth","control","actions","toggle"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAEA,OAAOC,OAAP,MAAoB,wBAApB;;AAEA,eAAeC,UAAf,CAA0BC,KAA1B,EAAiCC,QAAjC,EAA2C;AACzC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAD,EAAoB;AAC9CC,IAAAA,MAAM,EAAE,MADsC;AAE9CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAf,CAFwC;AAG9CO,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHqC,GAApB,CAA5B;AAOA,QAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;;AAEA,MAAI,CAACR,QAAQ,CAACS,EAAd,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,uBAA1B,CAAN;AACD;;AACD,SAAOJ,IAAP;AACD;;AAED,SAASK,QAAT,GAAoB;AAClB,QAAMC,aAAa,GAAGnB,MAAM,EAA5B;AACA,QAAMoB,gBAAgB,GAAGpB,MAAM,EAA/B;AAEA,QAAM;AAAA,OAACqB,OAAD;AAAA,OAAUC;AAAV,MAAwBvB,QAAQ,CAAC,IAAD,CAAtC;;AAEA,WAASwB,qBAAT,GAAiC;AAC/BD,IAAAA,UAAU,CAAEE,SAAD,IAAe,CAACA,SAAjB,CAAV;AACD;;AAED,iBAAeC,aAAf,CAA6BC,CAA7B,EAAgC;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,YAAY,GAAGT,aAAa,CAACU,OAAd,CAAsBC,KAA3C;AACA,UAAMC,eAAe,GAAGX,gBAAgB,CAACS,OAAjB,CAAyBC,KAAjD;;AAEA,QAAIT,OAAJ,EAAa;AACX,UAAI;AACF,cAAMW,MAAM,GAAG,MAAM/B,MAAM,CAAC,aAAD,EAAgB;AACzCgC,UAAAA,QAAQ,EAAE,KAD+B;AAEzC7B,UAAAA,KAAK,EAAEwB,YAFkC;AAGzCvB,UAAAA,QAAQ,EAAE0B;AAH+B,SAAhB,CAA3B;AAKAG,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAUH,MAAtB;AACD,OAPD,CAOE,OAAOI,KAAP,EAAc;AACdF,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAaC,KAAzB;AACD;AACF,KAXD,MAWO;AACL,UAAI;AACF,cAAMJ,MAAM,GAAG,MAAM7B,UAAU,CAACyB,YAAD,EAAeG,eAAf,CAA/B;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD,OAHD,CAGE,OAAOI,KAAP,EAAc;AACdF,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBC,KAA7B;AACD;AACF;AACF;;AAED,sBACE;AAAS,IAAA,SAAS,EAAElC,OAAO,CAACmC,IAA5B;AAAA,4BACE;AAAA,gBAAKhB,OAAO,GAAG,OAAH,GAAa;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEI,aAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEvB,OAAO,CAACoC,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,EAAE,EAAC,OAAvB;AAA+B,UAAA,QAAQ,MAAvC;AAAwC,UAAA,GAAG,EAAEnB;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAEjB,OAAO,CAACoC,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,QAAQ,MAHV;AAIE,UAAA,GAAG,EAAElB;AAJP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAcE;AAAK,QAAA,SAAS,EAAElB,OAAO,CAACqC,OAAxB;AAAA,gCACE;AAAA,oBAASlB,OAAO,GAAG,OAAH,GAAa;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAEnB,OAAO,CAACsC,MAFrB;AAGE,UAAA,OAAO,EAAEjB,qBAHX;AAAA,oBAKGF,OAAO,GAAG,oBAAH,GAA0B;AALpC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;AAED,eAAeH,QAAf","sourcesContent":["import { useState, useRef } from \"react\";\nimport { signIn } from \"next-auth/react\";\n\nimport classes from \"./auth-form.module.css\";\n\nasync function createUser(email, password) {\n  const response = await fetch(\"api/auth/signup\", {\n    method: \"POST\",\n    body: JSON.stringify({ email, password }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Something went wrong!\");\n  }\n  return data;\n}\n\nfunction AuthForm() {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const [isLogin, setIsLogin] = useState(true);\n\n  function switchAuthModeHandler() {\n    setIsLogin((prevState) => !prevState);\n  }\n\n  async function submitHandler(e) {\n    e.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    if (isLogin) {\n      try {\n        const result = await signIn(\"credentials\", {\n          redirect: false,\n          email: enteredEmail,\n          password: enteredPassword,\n        });\n        console.log(\"asdds\" + result);\n      } catch (error) {\n        console.log(\"signIn: \" + error);\n      }\n    } else {\n      try {\n        const result = await createUser(enteredEmail, enteredPassword);\n        console.log(result);\n      } catch (error) {\n        console.log(\"createUser: \" + error);\n      }\n    }\n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n}\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}