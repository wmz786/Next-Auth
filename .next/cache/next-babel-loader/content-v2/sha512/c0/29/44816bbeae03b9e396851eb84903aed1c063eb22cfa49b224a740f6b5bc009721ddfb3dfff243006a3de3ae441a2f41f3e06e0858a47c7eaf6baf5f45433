{"ast":null,"code":"import { hashPassword } from \"../../../lib/auth\";\nimport { connectToDatabase } from \"../../../lib/db\";\n\nasync function handler(req, res) {\n  if (req.method !== \"POST\") {\n    return;\n  }\n\n  try {\n    const data = req.body;\n    const {\n      email,\n      password\n    } = data;\n\n    if (!email || !email.includes(\"@\") || !password || password.trim().length < 7) {\n      res.status(422).json({\n        message: \"invalid email or password is less then 7 characters long.\"\n      });\n      return;\n    }\n\n    const hashedPassword = await hashPassword(password);\n    const client = await connectToDatabase();\n    const db = client.db();\n    const existing = await db.collection(\"user\").findOne({\n      email: email\n    });\n\n    if (existing) {\n      res.status(422).json({\n        message: \"User already exits!\"\n      });\n      client.close();\n      return;\n    }\n\n    const result = await db.collection(\"user\").insertOne({\n      email: email,\n      password: hashedPassword\n    });\n    res.status(201).json({\n      message: \"Created user!\"\n    });\n    client.close();\n  } catch (error) {\n    console.log(\"signup: \" + error);\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["/home/siaw-dev/Documents/next/learning-projects/next-auth/pages/api/auth/signup.js"],"names":["hashPassword","connectToDatabase","handler","req","res","method","data","body","email","password","includes","trim","length","status","json","message","hashedPassword","client","db","existing","collection","findOne","close","result","insertOne","error","console","log"],"mappings":"AAAA,SAASA,YAAT,QAA6B,mBAA7B;AACA,SAASC,iBAAT,QAAkC,iBAAlC;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB;AACD;;AACD,MAAI;AACF,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBH,IAA5B;;AAEA,QACE,CAACE,KAAD,IACA,CAACA,KAAK,CAACE,QAAN,CAAe,GAAf,CADD,IAEA,CAACD,QAFD,IAGAA,QAAQ,CAACE,IAAT,GAAgBC,MAAhB,GAAyB,CAJ3B,EAKE;AACAR,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,QAAAA,OAAO,EAAE;AADU,OAArB;AAGA;AACD;;AACD,UAAMC,cAAc,GAAG,MAAMhB,YAAY,CAACS,QAAD,CAAzC;AAEA,UAAMQ,MAAM,GAAG,MAAMhB,iBAAiB,EAAtC;AACA,UAAMiB,EAAE,GAAGD,MAAM,CAACC,EAAP,EAAX;AAEA,UAAMC,QAAQ,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,MAAd,EAAsBC,OAAtB,CAA8B;AAAEb,MAAAA,KAAK,EAAEA;AAAT,KAA9B,CAAvB;;AAEA,QAAIW,QAAJ,EAAc;AACZf,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACAE,MAAAA,MAAM,CAACK,KAAP;AACA;AACD;;AAED,UAAMC,MAAM,GAAG,MAAML,EAAE,CAACE,UAAH,CAAc,MAAd,EAAsBI,SAAtB,CAAgC;AACnDhB,MAAAA,KAAK,EAAEA,KAD4C;AAEnDC,MAAAA,QAAQ,EAAEO;AAFyC,KAAhC,CAArB;AAKAZ,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACAE,IAAAA,MAAM,CAACK,KAAP;AACD,GAnCD,CAmCE,OAAOG,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,KAAzB;AACD;AACF;;AAED,eAAevB,OAAf","sourcesContent":["import { hashPassword } from \"../../../lib/auth\";\nimport { connectToDatabase } from \"../../../lib/db\";\n\nasync function handler(req, res) {\n  if (req.method !== \"POST\") {\n    return;\n  }\n  try {\n    const data = req.body;\n    const { email, password } = data;\n\n    if (\n      !email ||\n      !email.includes(\"@\") ||\n      !password ||\n      password.trim().length < 7\n    ) {\n      res.status(422).json({\n        message: \"invalid email or password is less then 7 characters long.\",\n      });\n      return;\n    }\n    const hashedPassword = await hashPassword(password);\n\n    const client = await connectToDatabase();\n    const db = client.db();\n\n    const existing = await db.collection(\"user\").findOne({ email: email });\n\n    if (existing) {\n      res.status(422).json({ message: \"User already exits!\" });\n      client.close();\n      return;\n    }\n\n    const result = await db.collection(\"user\").insertOne({\n      email: email,\n      password: hashedPassword,\n    });\n\n    res.status(201).json({ message: \"Created user!\" });\n    client.close();\n  } catch (error) {\n    console.log(\"signup: \" + error);\n  }\n}\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}