{"ast":null,"code":"import { hashPassword } from \"../../../lib/auth\";\nimport { connectToDatabase } from \"../../../lib/db\";\n\nasync function handler(req, res) {\n  if (req.method !== \"POST\") {\n    return;\n  }\n\n  try {\n    const data = req.body;\n    const {\n      email,\n      password\n    } = data;\n    console.log(\"data\"); // if (\n    //   !email ||\n    //   !email.includes(\"@\") ||\n    //   !password ||\n    //   password.trim().length < 7\n    // ) {\n    //   res.status(422).json({\n    //     message: \"invalid email or password is less then 7 characters long.\",\n    //   });\n    //   return;\n    // }\n    //   const hashedPassword = await hashPassword(password);\n\n    const client = await connectToDatabase();\n    const db = client.db();\n    const result = await db.collection(\"user\").insertOne({\n      email: email,\n      password: password\n    });\n    console.log(result);\n    res.status(201).json({\n      message: \"Created user!\"\n    });\n  } catch (error) {\n    console.log(\"signup\" + error);\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["/home/siaw-dev/Documents/next/learning-projects/next-auth/pages/api/auth/signup.js"],"names":["hashPassword","connectToDatabase","handler","req","res","method","data","body","email","password","console","log","client","db","result","collection","insertOne","status","json","message","error"],"mappings":"AAAA,SAASA,YAAT,QAA6B,mBAA7B;AACA,SAASC,iBAAT,QAAkC,iBAAlC;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB;AACD;;AACD,MAAI;AACF,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBH,IAA5B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAHE,CAIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAMC,MAAM,GAAG,MAAMX,iBAAiB,EAAtC;AACA,UAAMY,EAAE,GAAGD,MAAM,CAACC,EAAP,EAAX;AAEA,UAAMC,MAAM,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,MAAd,EAAsBC,SAAtB,CAAgC;AACnDR,MAAAA,KAAK,EAAEA,KAD4C;AAEnDC,MAAAA,QAAQ,EAAEA;AAFyC,KAAhC,CAArB;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACAV,IAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACD,GA1BD,CA0BE,OAAOC,KAAP,EAAc;AACdV,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWS,KAAvB;AACD;AACF;;AAED,eAAelB,OAAf","sourcesContent":["import { hashPassword } from \"../../../lib/auth\";\nimport { connectToDatabase } from \"../../../lib/db\";\n\nasync function handler(req, res) {\n  if (req.method !== \"POST\") {\n    return;\n  }\n  try {\n    const data = req.body;\n    const { email, password } = data;\n    console.log(\"data\");\n    // if (\n    //   !email ||\n    //   !email.includes(\"@\") ||\n    //   !password ||\n    //   password.trim().length < 7\n    // ) {\n    //   res.status(422).json({\n    //     message: \"invalid email or password is less then 7 characters long.\",\n    //   });\n    //   return;\n    // }\n    //   const hashedPassword = await hashPassword(password);\n\n    const client = await connectToDatabase();\n    const db = client.db();\n\n    const result = await db.collection(\"user\").insertOne({\n      email: email,\n      password: password,\n    });\n    console.log(result);\n    res.status(201).json({ message: \"Created user!\" });\n  } catch (error) {\n    console.log(\"signup\" + error);\n  }\n}\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}