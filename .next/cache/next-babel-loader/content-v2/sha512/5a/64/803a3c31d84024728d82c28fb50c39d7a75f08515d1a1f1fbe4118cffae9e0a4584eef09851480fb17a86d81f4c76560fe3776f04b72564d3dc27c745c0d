{"ast":null,"code":"import { hashPassword } from \"../../../lib/auth\";\nimport { connectToDatabase } from \"../../../lib/db\";\n\nasync function handler(req, res) {\n  if (req.method == \"POST\") {\n    return;\n  }\n\n  const data = req.body;\n  const {\n    email,\n    password\n  } = data;\n  console.log(\"data\"); //   if (\n  //     !email ||\n  //     !email.includes(\"@\") ||\n  //     !password ||\n  //     password.trim().length > 7\n  //   ) {\n  //     res.status(422).json({\n  //       message: \"invalid email or password is less then 7 characters long.\",\n  //     });\n  //     return;\n  //   }\n\n  const hashedPassword = await hashPassword(password);\n  const client = await connectToDatabase();\n  const db = client.db();\n  const result = await db.collection(\"user\").insertOne({\n    email: email,\n    password: hashedPassword\n  });\n  console.log(\"data2\");\n  res.status(201).json({\n    message: \"Created user!\"\n  });\n}\n\nexport default handler;","map":{"version":3,"sources":["/home/siaw-dev/Documents/next/learning-projects/next-auth/pages/api/auth/signup.js"],"names":["hashPassword","connectToDatabase","handler","req","res","method","data","body","email","password","console","log","hashedPassword","client","db","result","collection","insertOne","status","json","message"],"mappings":"AAAA,SAASA,YAAT,QAA6B,mBAA7B;AACA,SAASC,iBAAT,QAAkC,iBAAlC;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAID,GAAG,CAACE,MAAJ,IAAc,MAAlB,EAA0B;AACxB;AACD;;AACD,QAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,IAA5B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAN+B,CAO/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMC,cAAc,GAAG,MAAMZ,YAAY,CAACS,QAAD,CAAzC;AAEA,QAAMI,MAAM,GAAG,MAAMZ,iBAAiB,EAAtC;AACA,QAAMa,EAAE,GAAGD,MAAM,CAACC,EAAP,EAAX;AAEA,QAAMC,MAAM,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,MAAd,EAAsBC,SAAtB,CAAgC;AACnDT,IAAAA,KAAK,EAAEA,KAD4C;AAEnDC,IAAAA,QAAQ,EAAEG;AAFyC,GAAhC,CAArB;AAIAF,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAP,EAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAArB;AACD;;AAED,eAAelB,OAAf","sourcesContent":["import { hashPassword } from \"../../../lib/auth\";\nimport { connectToDatabase } from \"../../../lib/db\";\n\nasync function handler(req, res) {\n  if (req.method == \"POST\") {\n    return;\n  }\n  const data = req.body;\n  const { email, password } = data;\n  console.log(\"data\");\n  //   if (\n  //     !email ||\n  //     !email.includes(\"@\") ||\n  //     !password ||\n  //     password.trim().length > 7\n  //   ) {\n  //     res.status(422).json({\n  //       message: \"invalid email or password is less then 7 characters long.\",\n  //     });\n  //     return;\n  //   }\n  const hashedPassword = await hashPassword(password);\n\n  const client = await connectToDatabase();\n  const db = client.db();\n\n  const result = await db.collection(\"user\").insertOne({\n    email: email,\n    password: hashedPassword,\n  });\n  console.log(\"data2\");\n  res.status(201).json({ message: \"Created user!\" });\n}\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}