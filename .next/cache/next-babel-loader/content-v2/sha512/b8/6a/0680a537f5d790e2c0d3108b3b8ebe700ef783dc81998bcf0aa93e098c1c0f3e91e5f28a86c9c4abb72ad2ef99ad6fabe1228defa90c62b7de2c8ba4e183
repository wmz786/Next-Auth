{"ast":null,"code":"import { hashPassword } from \"../../../lib/auth\";\nimport { connectToDatabase } from \"../../../lib/db\";\n\nasync function handler(req, res) {\n  if (req.method == \"POST\") {\n    return;\n  }\n\n  const data = req.body;\n  const {\n    email,\n    password\n  } = data;\n\n  if (!email || !email.includes(\"@\") || !password || password.trim().length > 7) {\n    res.status(422).json({\n      message: \"invalid email or password is less then 7 characters long.\"\n    });\n    return;\n  }\n\n  const hashedPassword = hashPassword(password);\n  const db = await connectToDatabase();\n  const result = await db.collection(\"user\").insertOne({\n    email: email,\n    password: hashedPassword\n  });\n  res.status(201).json({\n    message: \"Created user!\"\n  });\n}\n\nexport default handler;","map":{"version":3,"sources":["/home/siaw-dev/Documents/next/learning-projects/next-auth/pages/api/auth/signup.js"],"names":["hashPassword","connectToDatabase","handler","req","res","method","data","body","email","password","includes","trim","length","status","json","message","hashedPassword","db","result","collection","insertOne"],"mappings":"AAAA,SAASA,YAAT,QAA6B,mBAA7B;AACA,SAASC,iBAAT,QAAkC,iBAAlC;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAID,GAAG,CAACE,MAAJ,IAAc,MAAlB,EAA0B;AACxB;AACD;;AACD,QAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,IAA5B;;AAEA,MACE,CAACE,KAAD,IACA,CAACA,KAAK,CAACE,QAAN,CAAe,GAAf,CADD,IAEA,CAACD,QAFD,IAGAA,QAAQ,CAACE,IAAT,GAAgBC,MAAhB,GAAyB,CAJ3B,EAKE;AACAR,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,MAAAA,OAAO,EAAE;AADU,KAArB;AAGA;AACD;;AACD,QAAMC,cAAc,GAAGhB,YAAY,CAACS,QAAD,CAAnC;AAEA,QAAMQ,EAAE,GAAG,MAAMhB,iBAAiB,EAAlC;AACA,QAAMiB,MAAM,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,MAAd,EAAsBC,SAAtB,CAAgC;AACnDZ,IAAAA,KAAK,EAAEA,KAD4C;AAEnDC,IAAAA,QAAQ,EAAEO;AAFyC,GAAhC,CAArB;AAIAZ,EAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAArB;AACD;;AAED,eAAeb,OAAf","sourcesContent":["import { hashPassword } from \"../../../lib/auth\";\nimport { connectToDatabase } from \"../../../lib/db\";\n\nasync function handler(req, res) {\n  if (req.method == \"POST\") {\n    return;\n  }\n  const data = req.body;\n  const { email, password } = data;\n\n  if (\n    !email ||\n    !email.includes(\"@\") ||\n    !password ||\n    password.trim().length > 7\n  ) {\n    res.status(422).json({\n      message: \"invalid email or password is less then 7 characters long.\",\n    });\n    return;\n  }\n  const hashedPassword = hashPassword(password);\n\n  const db = await connectToDatabase();\n  const result = await db.collection(\"user\").insertOne({\n    email: email,\n    password: hashedPassword,\n  });\n  res.status(201).json({ message: \"Created user!\" });\n}\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}